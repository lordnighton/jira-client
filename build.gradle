buildscript {
	ext {
		springBootVersion = '2.0.6.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        dependencies { classpath 'org.apache.commons:commons-lang3:3.6' }
	}
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.ubs.qa.jira'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

dependencies {
	compile 'com.squareup.okhttp3:okhttp:3.11.0'
    compile 'org.apache.commons:commons-lang3:3.6'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.7'

    implementation('org.springframework.boot:spring-boot-starter')
	testImplementation('org.springframework.boot:spring-boot-starter-test')
}

import org.apache.commons.lang3.StringUtils;

project.ext.fileToRead = file('src/main/resources/application.properties')

task checkUserCredentials() {
    group 'Helpers'
    description 'This task checks Jira user credentials'

    doLast {
        println "Checking the Jira user credentials..."
        if (project.fileToRead.exists()) {
            def properties = new Properties()
            properties.load(new FileInputStream("src/main/resources/application.properties"))

            assert StringUtils.isNotEmpty(properties.get("user.name"))
            assert StringUtils.isNotEmpty(properties.get("user.password"))

            println "Jira user credentials checked"
        } else {
            throw new FileNotFoundException("Application properties file is absent in resources folder")
        }
    }
}
bootRun.dependsOn checkUserCredentials
